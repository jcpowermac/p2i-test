apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: p2i
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: playbook2image-example
    name: playbook2image-example
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: playbook2image-example:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/jcpowermac/playbook2image-example
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:latest
      type: Docker
    triggers:
    - github:
        secret: OhSDBQtILgAgkxkYcMAt
      type: GitHub
    - generic:
        secret: LD-sbbmpGsJ8oDeDvKMM
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: ssh-keygen
    name: ssh-keygen
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ssh-keygen:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM centos
        RUN yum install -y openssh
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:latest
          namespace: playbook2image-ex
      type: Docker
    triggers:
    - github:
        secret: ctVr6FC2eSeES8eXu85O
      type: GitHub
    - generic:
        secret: DfoMgD-yo9m-Wxuooyd1
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: test
    name: test
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: test:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/jcpowermac/playbook2image-example
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: playbook2image:latest
      type: Source
    triggers:
    - github:
        secret: uuCllU11aXDkBOMvdGP9
      type: GitHub
    - generic:
        secret: FB072D0PYSat5w0L4pjr
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 38
    labels:
      app: playbook2image-example
    name: playbook2image-example
  spec:
    replicas: 1
    selector:
      app: playbook2image-example
      deploymentconfig: playbook2image-example
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.playbook2image-example.image.entrypoint: '["/bin/bash"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: playbook2image-example
          deploymentconfig: playbook2image-example
      spec:
        containers:
        - image: 172.30.7.246:5000/playbook2image-ex/playbook2image-example@sha256:1868757dd8e45c0506c45a613ef7b2d547b6840f5acc257ee8dee24ee13a41ee
          imagePullPolicy: Always
          name: playbook2image-example
          ports:
          - containerPort: 22222
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: sshkeys
          - mountPath: /opt/app-root/src/.ssh
            name: sshkeys
          - mountPath: /opt/app-root/.ssh
            name: sshkeys
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sshkeys
          secret:
            secretName: sshkeys
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - playbook2image-example
        from:
          kind: ImageStreamTag
          name: playbook2image-example:latest
          namespace: playbook2image-ex
      type: ImageChange
  status:
    availableReplicas: 1
    observedGeneration: 38
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: playbook2image-example
    name: playbook2image-example
  spec:
    ports:
    - name: 22222-tcp
      port: 22222
      protocol: TCP
      targetPort: 22222
    selector:
      app: playbook2image-example
      deploymentconfig: playbook2image-example
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    creationTimestamp: null
    labels:
      app: playbook2image-example
      controller-uid: 8f375aa5-e8bd-11e6-8568-525400f50924
      job-name: test
    name: test
  spec:
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 8f375aa5-e8bd-11e6-8568-525400f50924
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: playbook2image-example
          controller-uid: 8f375aa5-e8bd-11e6-8568-525400f50924
          job-name: test
        name: test
      spec:
        containers:
        - env:
          - name: INVENTORY_FILE
            value: /opt/app-root/src/hosts.ini
          - name: ANSIBLE_HOST_KEY_CHECKING
            value: "False"
          - name: PLAYBOOK_FILE
            value: /opt/app-root/src/main.yml
          - name: ANSIBLE_PRIVATE_KEY_FILE
            value: /tmp/ssh/id_rsa
          - name: ANSIBLE_LOCAL_TEMP
            value: /tmp/ansible-temp
          - name: SSH_KEY
            value: /tmp/foo
          - name: OPTS
            value: -vvvv
          image: 172.30.7.246:5000/playbook2image-ex/test
          imagePullPolicy: Always
          name: test
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /tmp/ssh
            name: sshkeys
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sshkeys
          secret:
            secretName: sshkeys
  status:
    completionTime: 2017-02-01T20:32:42Z
    conditions:
    - lastProbeTime: 2017-02-01T20:32:42Z
      lastTransitionTime: 2017-02-01T20:32:42Z
      status: "True"
      type: Complete
    startTime: 2017-02-01T20:32:33Z
    succeeded: 1
